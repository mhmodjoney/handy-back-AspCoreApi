// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using model_api;

namespace model_api.Migrations
{
    [DbContext(typeof(CustomerDbContext))]
    [Migration("20230114132619_MyFirstMigration")]
    partial class MyFirstMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("model_api.Models.Admin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("BirthDate")
                        .HasColumnName("BirthDate");

                    b.Property<string>("Email")
                        .HasColumnName("Email");

                    b.Property<string>("Gender")
                        .HasColumnName("Gender");

                    b.Property<string>("Name")
                        .HasColumnName("name");

                    b.Property<string>("Password")
                        .HasColumnName("password");

                    b.Property<string>("state")
                        .HasColumnName("state");

                    b.HasKey("Id");

                    b.ToTable("Admins");
                });

            modelBuilder.Entity("model_api.Models.AuthCode", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Customer_ID");

                    b.Property<DateTime>("ExDate")
                        .HasColumnName("ExDate");

                    b.Property<string>("code")
                        .HasColumnName("code");

                    b.HasKey("Id");

                    b.HasIndex("Customer_ID");

                    b.ToTable("AuthCodes");
                });

            modelBuilder.Entity("model_api.Models.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("BirthDate")
                        .HasColumnName("BirthDate");

                    b.Property<string>("Email")
                        .HasColumnName("Email");

                    b.Property<string>("Gender")
                        .HasColumnName("Gender");

                    b.Property<string>("Name")
                        .HasColumnName("name");

                    b.Property<string>("Password")
                        .HasColumnName("password");

                    b.Property<string>("state")
                        .HasColumnName("state");

                    b.HasKey("Id");

                    b.ToTable("Customer","dbo");
                });

            modelBuilder.Entity("model_api.Models.CustomerLogs", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Customer_ID");

                    b.Property<DateTime>("Date")
                        .HasColumnName("Date");

                    b.Property<string>("state")
                        .HasColumnName("state");

                    b.HasKey("Id");

                    b.HasIndex("Customer_ID");

                    b.ToTable("Customerlogs");
                });

            modelBuilder.Entity("model_api.Models.Payment_info", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Customer_ID");

                    b.Property<DateTime>("Date")
                        .HasColumnName("Date");

                    b.Property<int>("Quantity")
                        .HasColumnName("Quantity");

                    b.Property<long>("amount")
                        .HasColumnName("amount");

                    b.Property<string>("description")
                        .HasColumnName("description");

                    b.Property<string>("name")
                        .HasColumnName("name");

                    b.Property<int?>("product_id")
                        .HasColumnName("product_id");

                    b.Property<string>("state")
                        .HasColumnName("state");

                    b.Property<string>("type")
                        .HasColumnName("type");

                    b.HasKey("Id");

                    b.HasIndex("Customer_ID");

                    b.ToTable("Pyament_infos");
                });

            modelBuilder.Entity("model_api.Models.AuthCode", b =>
                {
                    b.HasOne("model_api.Models.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("Customer_ID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("model_api.Models.CustomerLogs", b =>
                {
                    b.HasOne("model_api.Models.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("Customer_ID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("model_api.Models.Payment_info", b =>
                {
                    b.HasOne("model_api.Models.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("Customer_ID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
